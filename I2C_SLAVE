#define F_CPU 8000000
#include <avr/io.h>
#include <avr/interrupt.h>
#include <util/delay.h>
void USART0_INIT(void){
	/*baud rate*/
	UBRR0H = 0x00;
	UBRR0L = 0x33;
	UCSR0C = 0x06;
	/*enabling receiver and transmitter*/
	UCSR0B = 0x18;
	/*setting frame format*/
}

void USART0_TRANS(uint8_t data){
	while(!(UCSR0A & 0x20));
	UDR0 = data;
}
void I2C_INIT(){
	//TWSR |= (1<<TWPS1)|(1<<TWPS0);
	//TWBR = BITRATE(TWSR);
	TWAR = 0xA0;
	TWCR |= (1<<TWEN)|(1<<TWEA)|(1<<TWIE);
	
}



void I2C_ACK(void){
	//while((TWSR & 0xF8)!= 0x60);
	TWCR |= (1<<TWEA)|(1<<TWEN)|(1<<TWINT)|(1<<TWIE);
	while(!(TWCR&(1<<TWINT)));
	}

char I2C_REC(){
	TWCR |= (1<<TWEA)|(1<<TWINT)|(1<<TWEN);
	while(!(TWCR&(1<<TWINT)));
	return TWDR;
}

int main(void){
	sei();
	USART0_INIT();
	DDRF = 0xFF;
	PORTF = 0x01;
	I2C_INIT();
	PORTF = 0x02;
	while(1);
		
	return 0;
}
ISR(TWI_vect){
	if((TWSR & 0xF8)== 0x80){
		USART0_TRANS(TWDR);
		TWCR |= (1<<TWINT)|(1<<TWEA);
		
	}
	else if((TWSR & 0xF8)== 0xA0){
		PORTF = 0x0F;
		//TWCR |= (1<<TWEA)|(1<<TWINT);
		TWCR &= ~(1<<TWEN);
		//_delay_ms(1000);
		}
	else if((TWSR & 0xF8)== 0x60){
		PORTF = 0xF0;
		TWCR |= (1<<TWEA)|(1<<TWINT);
		//_delay_ms(1000);
		
	}
	
	else {
		TWCR |=(1<<TWINT);
		PORTF = 0xFF;
		//_delay_ms(1000);
			
	}
}
